name: test
on:
  push:
    branches: ["*"]
    tags: ["*"]
jobs:
  run_linting:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.8" # Version range or exact version of a Python version to use, using SemVer's version range syntax
          architecture: "x64" # optional x64 or x86. Defaults to x64 if not specified
      - run: pip install -e .[dev]
        name: install development dependencies
      - run: pylint --exit-zero beam_bc365
        name: run linting

  run_tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.8" # Version range or exact version of a Python version to use, using SemVer's version range syntax
          architecture: "x64" # optional x64 or x86. Defaults to x64 if not specified
      - run: pip install -e .[dev]
        name: install development dependencies
      - run: nosetests
        name: run tests

  deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v2
      - run: |
          git config user.name automation-release
          git config user.email  automation-release@github.com
      - uses: actions/setup-python@v2
        with:
          python-version: "3.8"
          architecture: "x64"
      - run: pip install -e .[dev]
        name: install development dependencies
      - run: bump2version --new-version ${{ github.ref }} setup.py
        name: bump version
      - name: push commit
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: "main"
      - name: build dist
        run: python setup.py sdist
      - name: push to PyPi
        run: twine upload -u __token__ -p ${{ secrets.PYPI_TOKEN }} dist/*
